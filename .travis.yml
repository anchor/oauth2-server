# Use the docker infrastructure.
sudo: false

# for cabal
language: haskell
ghc: 7.8

cache:
  directories:
    - $HOME/.stack

notifications:
  email:
    on_success: change
    on_failure: change

addons:
  postgresql: "9.3"

env:
  global:
    - TESTCONF="/tmp/token-server-$$.conf"
    - DBNAME="token_server_test"
  matrix:
    - STACK_YAML=stack-7.8.yaml
    - STACK_YAML=stack-7.10.yaml

install:
 - travis_retry wget https://github.com/commercialhaskell/stack/releases/download/v0.1.2.0/stack-0.1.2.0-x86_64-linux.gz
 - gunzip stack-0.1.2.0-x86_64-linux.gz
 - mv stack-0.1.2.0-x86_64-linux stack
 - chmod +x stack
 - psql -c "create database $DBNAME;" -U postgres
 - psql $DBNAME < schema/postgresql.sql
 - psql $DBNAME < examples/postgresql-data.sql
 - cat examples/token-server.conf | sed -e "s/DBNAME/$DBNAME/" > $TESTCONF

# Here starts the actual work to be performed for the package under test; any
# command which exits with a non-zero exit code causes the build to fail.
script:
 - cabal check
 - cabal sdist
 - export SRC=$(cabal info . | awk '{print $2;exit}')
 - tar -xzf "dist/$SRC.tar.gz"
 - cd "$SRC"
 - cp ../$STACK_YAML .
 - cp ../stack .
 - travis_retry ./stack setup
 - travis_retry ./stack install --only-snapshot -j4 --verbosity info
 - ./stack build
 - ./stack test
 - ./stack haddock --no-haddock-deps
 - export DIST_DIR=$(./stack path --dist-dir --stack-yaml $STACK_YAML)
 - echo $DIST_DIR
 - $DIST_DIR/build/tokenserver/tokenserver "$TESTCONF" > /dev/null 2>&1 &
 - sleep 1
 - $DIST_DIR/build/test-acceptance/test-acceptance http://localhost:8080
 - pkill tokenserver
